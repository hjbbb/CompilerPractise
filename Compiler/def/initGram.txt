vn : A B C D E F F1 F2 FR L M P S T 
vt : ( ) * + - / ; = cmp else for id if main num rel return type void while { } 
0 $ -> M 
1 M -> void main ( ) { P return ; } 
2 P -> D S 
3 D -> D type id ; 
4 D -> type id ; 
5 S -> A 
6 S -> { L } 
7 S -> if ( B ) { L } else { L } 
8 S -> if ( B ) { L } 
9 S -> while ( B ) { L } 
10 S -> FR 
11 FR -> for ( A ; B ; F1 F2 
12 F1 -> A ) { 
13 F2 -> L } 
14 A -> id = E 
15 L -> S ; L 
16 L -> S 
17 L -> # 
18 B -> B rel C 
19 B -> C 
20 C -> id cmp id 
21 C -> id cmp num 
22 C -> id 
23 E -> T 
24 E -> E + T 
25 E -> E - T 
26 T -> F 
27 T -> T * F 
28 T -> T / F 
29 F -> num 
30 F -> id 
31 F -> ( E ) 
